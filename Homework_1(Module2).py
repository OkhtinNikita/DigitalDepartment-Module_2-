import numpy as np
import sys
import array

## 1. Какие еще существуют коды типов?

# b - знаковый байт (-128 до 127) 
# B - беззнаковый байт (0 до 255) (int)
# f - число с плавающей запятой (float) 
# d - двойная точность (float)
# u - символы Unicode, то есть строка (str)
# h - знаковое целое число но ограниченное от -32768 до 32767 (int)
# H - беззнаковое целое число но ограниченное от 0 до 65535 (int)
# i - знаковое целое число но в большом диапазоне, от -2147483648 до 2147483647 (int)
# I - беззнаковое целое число но в большом диапазоне, от 0 до 4294967295 (int)
# l - знаковое длинное целое (int)
# L - беззнаковое длинное целое (int)

## 2. Напишите код, подобный приведенному выше, но с другим типом

# res2 = array.array('f', [1.168,468.893,9.8263]) 
# print(sys.getsizeof(res2))
# print(type(res2))

## 3. Напишите код для создания массива с 5 значениями, располагающимися через равные интервалы в диапазоне от 0 до 1

# res3 = np.linspace(0, 1, 5)
# print(res3)

## 4. Напишите код для создания массива с 5 равномерно распределенными случайными значениями в диапазоне от 0 до 1

# res4 = np.random.uniform(0, 1, 5)
# print(res4)

## 5. Напишите код для создания массива с 5 нормально распределенными случайными значениями с мат. ожиданием = 0 и дисперсией 1

# res5 = np.random.normal(0, 1, 5)   
# print(res5)

## 6. Напишите код для создания массива с 5 случайными целыми числами в от [0, 10)

# res6 = np.random.randint(0, 10, 5)
# print(res6)

## 7. Написать код для создания срезов массива 3 на 4

# ar7 = np.arange(1, 13).reshape(3, 4)
# print(ar7)
## - первые две строки и три столбца
# print(ar7[:2, :3])
## - первые три строки и второй столбец
# print(ar7[:3, 1])
## - все строки и столбцы в обратном порядке
# print(ar7[::-1, ::-1])
## - второй столбец
# print(ar7[:, 1])
## - третья строка
# print(ar7[2])

## 8. Продемонстрируйте, как сделать срез-копию

# ar8 = np.arange(1, 10).reshape(3, 3)
# print(ar8)
# ar8copy = ar8[:,:].copy()
# print(ar8copy)

## 9. Продемонстрируйте использование newaxis для получения вектора-столбца и вектора-строки

# ar9 = np.arange(1, 13)
# print(ar9)
# column_ar9 = ar9[:, np.newaxis]
# row_ar9 = ar9[np.newaxis,:]
# print(column_ar9)
# print(row_ar9)

## 10. Разберитесь, как работает метод dstack (располагаем один массив за другим)

# x = np.array([[1, 2],[3, 4]])
# y = np.array([[5, 6],[7, 8]])
# res10 = np.dstack((x, y))
# print(res10)

## 11. Разберитесь, как работают методы split, vsplit, hsplit, dsplit (методы разделения массивов)

# ar11 = np.arange(10)
# ar11split = np.split(ar11, 5)
# print(ar11split)

# ar11_2 = np.arange(1, 10).reshape(3, 3)
# ar11vsplit = np.vsplit(ar11_2, 3) 
# print(ar11vsplit)

# ar11hsplit = np.hsplit(ar11_2, 3)
# print(ar11hsplit)

# ar11_3= np.array([[[1, 2], [3, 4]], [[5, 6], [7, 8]], [[9, 10], [11, 12]]])
# ar11dsplit = np.dsplit(ar11_3, 2)
# print(ar11dsplit)

## 12. Привести пример использования всех универсальных функций, которые я привел

# x = np.array([1, 2, 3])
# y = np.array([4, 5, 6])

# print(np.subtract(y,x))
# print(np.negative(x))
# print(np.divide(y, 2))
# print(np.floor_divide(y, 3))
# print(np.power(x, 3))
# print(np.mod(y, 4))